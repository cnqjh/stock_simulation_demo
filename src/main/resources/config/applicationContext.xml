<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			               http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			               http://www.springframework.org/schema/context
			               http://www.springframework.org/schema/context/spring-context-4.2.xsd
			               http://www.springframework.org/schema/mvc
			               http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
			               http://www.springframework.org/schema/tx
			               http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			               http://mybatis.org/schema/mybatis-spring 
			               http://mybatis.org/schema/mybatis-spring.xsd">


	<!-- mybatis:scan会扫描org.teng.dao包里的所有接口当作Spring的bean配置，之后可以进行依赖注入 -->
	<mybatis:scan base-package="org.simulation.operation.dao" />

	<!-- 扫描org.teng包下面的java文件，有Spring的相关注解的类，则把这些类注册为Spring的bean -->
	<context:component-scan base-package="org.simulation.operation" />

	<!-- 使用PropertyOverrideConfigurer后处理器加载数据源参数 -->
	<context:property-override location="classpath:db.properties" />

	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" />

<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" -->
<!-- 		p:dataSource-ref="dataSource"  -->
<!-- 		/>  -->

	<!--2创建一个sql会话工厂bean，指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" /><!-- 指定数据源 -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property> <!-- 指定配置文件 -->
	</bean>


	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<!-- 指定所上传文件的总大小不能超过10485760000B。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>


	<!-- JDBC事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<!-- 启用支持annotation注解方式事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>